{"version":3,"file":"static/js/947.495496f8.chunk.js","mappings":"yQAMMA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wDAgEV,UA3DqB,WACnB,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACQC,GAAWC,EAAAA,EAAAA,MAAXD,QAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,2FAC1BJ,GAAW,GADe,mBAGDK,EAAAA,EAAAA,GAAgBJ,GAHf,OAGlBK,EAHkB,OAIxBR,EAAQQ,GAJgB,gDAMxBC,QAAQC,IAAR,MANwB,yBAQxBR,GAAW,GARa,4EAAH,qDAWzBI,MACC,CAACH,IACJM,QAAQC,IAAIX,GACZ,IAAQY,EAA+CZ,EAA/CY,MAAOC,EAAwCb,EAAxCa,SAAUC,EAA8Bd,EAA9Bc,YAAaC,EAAiBf,EAAjBe,aAEtC,OACE,gCACGb,IAAW,SAAC,IAAD,KACZ,4BACE,gBACEc,IACEF,EAAW,yCAC2BA,GAClC,WAENG,IAAI,MAGN,0BACGL,EADH,KACYG,GAAgBA,EAAaG,MAAM,EAAG,GADlD,QAGA,kBACA,sCACA,uBAAIL,KACJ,oCACA,kBAOA,mBACA,mDACA,SAACjB,EAAD,CAAMuB,GAAG,GAAT,mBACA,SAACvB,EAAD,CAAMuB,GAAG,GAAT,sBACA,0B,gIC9DFC,EAAM,mCACZC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,IAAAA,IAAA,oCAAuCD,IAD/B,cACzBG,EADyB,gBAEFA,EAASC,KAAKC,QAFZ,cAEzBC,EAFyB,yBAGxBA,GAHwB,2CAAH,qDAMjBlB,EAAe,mCAAG,WAAMmB,GAAN,yFACNN,IAAAA,IAAA,iBACXM,EADW,oBACGP,EADH,oBADM,cACvBG,EADuB,gBAKFA,EAASC,KALP,cAKvBI,EALuB,yBAMtBA,GANsB,2CAAH,uD,oBCXb,SAASC,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQZ,MAAM,IAGfc,OAAOC,OAAOD,OAAOE,iBAAiBJ,EAAS,CACpDC,IAAK,CACHI,MAAOH,OAAOC,OAAOF,O","sources":["components/MovieDetails/MovieDetails.jsx","services/moviesApi.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Loader from 'components/Loader/Loader';\nimport { getMovieDetails } from 'services/moviesApi';\n\nconst Link = styled(NavLink)`\n  display: flex;\n  gap: 10px;\n`;\n\nconst MovieDetails = () => {\n  const [item, setItem] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { itemId } = useParams();\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      setLoading(true);\n      try {\n        const itemData = await getMovieDetails(itemId);\n        setItem(itemData);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, [itemId]);\n  console.log(item);\n  const { title, overview, poster_path, release_date } = item;\n\n  return (\n    <>\n      {loading && <Loader />}\n      <div>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : 'fuck you'\n          }\n          alt=\"\"\n        />\n\n        <h1>\n          {title} ({release_date && release_date.slice(0, 4)})\n        </h1>\n        <p></p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <p>\n          {/* {item.genres.length > 0 ? (\n            <p>{item.genres.map(genre => genre.name).join(', ')}</p>\n          ) : (\n            'not found'\n          )} */}\n        </p>\n        <hr />\n        <p>Additional information</p>\n        <Link to=\"\">Cast</Link>\n        <Link to=\"\">Reviews</Link>\n        <hr />\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = 'f954d1f327dcbc2e185dbd566025454c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  const trendingMovies = await response.data.results;\n  return trendingMovies;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n\n  const movieDetails = await response.data;\n  return movieDetails;\n};\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["Link","styled","NavLink","useState","item","setItem","loading","setLoading","itemId","useParams","useEffect","fetchTrendingMovies","getMovieDetails","itemData","console","log","title","overview","poster_path","release_date","src","alt","slice","to","KEY","axios","getTrendingMovies","response","data","results","trendingMovies","id","movieDetails","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value"],"sourceRoot":""}