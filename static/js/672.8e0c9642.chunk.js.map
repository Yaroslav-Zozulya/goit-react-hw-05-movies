{"version":3,"file":"static/js/672.8e0c9642.chunk.js","mappings":"yTAMMA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wDAyDV,EApDqB,WACnB,MCR0B,WAC1B,OAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAWC,EAAAA,EAAAA,MAAXD,OAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,mCAAG,2FAC1BN,GAAW,GADe,mBAGDO,EAAAA,EAAAA,GAAgBJ,GAHf,OAGlBK,EAHkB,OAIxBV,EAAQU,GACRN,EAASM,EAASP,OALM,gDAOxBQ,QAAQC,IAAR,MAPwB,yBASxBV,GAAW,GATa,4EAAH,qDAYzBM,MACC,CAACH,IACJM,QAAQC,IAAIT,GACL,CAAEJ,KAAAA,EAAME,QAAAA,EAASE,MAAAA,GDfSU,GAAzBd,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASE,EAAvB,EAAuBA,MAYvB,OAXAQ,QAAQC,IAAIb,GAQRA,GACFY,QAAQC,IAAR,mBAAwBb,KAGxB,gCACGE,IAAW,SAACa,EAAA,EAAD,IACXf,IACC,4BACE,gBACEgB,IACEhB,EAAKiB,YAAL,yCACsCjB,EAAKiB,aACvCC,EAENC,IAAI,MAGN,0BACGf,EADH,KACYJ,EAAKoB,cAAgBpB,EAAKoB,aAAaC,MAAM,EAAG,GAD5D,QAGA,kBACA,sCACA,uBAAIrB,EAAKsB,YACT,oCACA,yBACGtB,EAAKuB,OAAOC,OAAS,GACpB,uBAAIxB,EAAKuB,OAAOE,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,SAE9C,8CAGJ,mBACA,mDACA,SAAChC,EAAD,CAAMiC,GAAG,GAAT,mBACA,SAACjC,EAAD,CAAMiC,GAAG,GAAT,sBACA,0B,gIEtDJC,EAAM,mCACZC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,sGACRD,IAAAA,IAAA,oCAAuCD,IAD/B,cACzBG,EADyB,gBAEFA,EAASC,KAAKC,QAFZ,cAEzBC,EAFyB,yBAGxBA,GAHwB,2CAAH,qDAMjB1B,EAAe,mCAAG,WAAM2B,GAAN,yFACNN,IAAAA,IAAA,iBACXM,EADW,oBACGP,EADH,oBADM,cACvBG,EADuB,gBAKFA,EAASC,KALP,cAKvBI,EALuB,yBAMtBA,GANsB,2CAAH,uD,0sHCXb,SAASC,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQnB,MAAM,IAGfqB,OAAOC,OAAOD,OAAOE,iBAAiBJ,EAAS,CACpDC,IAAK,CACHI,MAAOH,OAAOC,OAAOF,O","sources":["components/MovieDetails/MovieDetails.jsx","hooks/useFetchItem.js","services/moviesApi.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Loader from 'components/Loader/Loader';\nimport image from 'images/notFound.jpg';\nimport { useFetchItem } from 'hooks/useFetchItem';\n\nconst Link = styled(NavLink)`\n  display: flex;\n  gap: 10px;\n`;\n\nconst MovieDetails = () => {\n  const { item, loading, title } = useFetchItem();\n  console.log(item);\n  // const { title, overview, poster_path, release_date, genres } = item;\n  // if (item) {\n  //   console.log(item);\n  //   const title = item.title;\n  //   console.log(title);\n  // }\n\n  if (item) {\n    console.log(`if item: ${item}`);\n  }\n  return (\n    <>\n      {loading && <Loader />}\n      {item && (\n        <div>\n          <img\n            src={\n              item.poster_path\n                ? `https://image.tmdb.org/t/p/w500${item.poster_path}`\n                : image\n            }\n            alt=\"\"\n          />\n\n          <h1>\n            {title} ({item.release_date && item.release_date.slice(0, 4)})\n          </h1>\n          <p></p>\n          <h2>Overview</h2>\n          <p>{item.overview}</p>\n          <h2>Genres</h2>\n          <div>\n            {item.genres.length > 0 ? (\n              <p>{item.genres.map(genre => genre.name).join(', ')}</p>\n            ) : (\n              <p>No genres found</p>\n            )}\n          </div>\n          <hr />\n          <p>Additional information</p>\n          <Link to=\"\">Cast</Link>\n          <Link to=\"\">Reviews</Link>\n          <hr />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'services/moviesApi';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchItem = () => {\n  const [item, setItem] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState('');\n\n  const { itemId } = useParams();\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      setLoading(true);\n      try {\n        const itemData = await getMovieDetails(itemId);\n        setItem(itemData);\n        setTitle(itemData.title);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrendingMovies();\n  }, [itemId]);\n  console.log(title);\n  return { item, loading, title };\n};\n","import axios from 'axios';\n\nconst KEY = 'f954d1f327dcbc2e185dbd566025454c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  const trendingMovies = await response.data.results;\n  return trendingMovies;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n\n  const movieDetails = await response.data;\n  return movieDetails;\n};\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["Link","styled","NavLink","useState","item","setItem","loading","setLoading","title","setTitle","itemId","useParams","useEffect","fetchTrendingMovies","getMovieDetails","itemData","console","log","useFetchItem","Loader","src","poster_path","image","alt","release_date","slice","overview","genres","length","map","genre","name","join","to","KEY","axios","getTrendingMovies","response","data","results","trendingMovies","id","movieDetails","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value"],"sourceRoot":""}